// Generated by CoffeeScript 1.7.1
(function() {
  window.onerror = function(error) {
    if (global.process.listeners('uncaughtException').length > 0) {
      global.process.emit('uncaughtException', error);
      return true;
    } else {
      return false;
    }
  };

  window.close = function() {
    return require('remote').getCurrentWindow().close();
  };

  window.open = function(url, name, features) {
    var BrowserWindow, browser, feature, options, value, _i, _len, _ref, _ref1;
    options = {};
    _ref = features.split(',');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      feature = _ref[_i];
      _ref1 = feature.split('='), name = _ref1[0], value = _ref1[1];
      options[name] = value === 'yes' ? true : value === 'no' ? false : value;
    }
    if (options.x == null) {
      options.x = options.left;
    }
    if (options.y == null) {
      options.y = options.top;
    }
    if (options.title == null) {
      options.title = name;
    }
    if (options.width == null) {
      options.width = 800;
    }
    if (options.height == null) {
      options.height = 600;
    }
    BrowserWindow = require('remote').require('browser-window');
    browser = new BrowserWindow(options);
    browser.loadUrl(url);
    return browser;
  };

  window.alert = function(message, title) {
    var buttons, dialog, remote;
    if (title == null) {
      title = '';
    }
    remote = require('remote');
    dialog = remote.require('dialog');
    buttons = ['OK'];
    return dialog.showMessageBox(remote.getCurrentWindow(), {
      message: message,
      title: title,
      buttons: buttons
    });
  };

  window.confirm = function(message, title) {
    var buttons, dialog, remote;
    if (title == null) {
      title = '';
    }
    remote = require('remote');
    dialog = remote.require('dialog');
    buttons = ['OK', 'Cancel'];
    return !dialog.showMessageBox(remote.getCurrentWindow(), {
      message: message,
      title: title,
      buttons: buttons
    });
  };

  window.prompt = function() {
    throw new Error('prompt() is and will not be supported in atom-shell.');
  };

}).call(this);
